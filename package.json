{
  "name": "react-project-template",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@fontsource/noto-sans": "^5.1.1",
    "@fortawesome/fontawesome-svg-core": "^6.7.1",
    "@fortawesome/free-solid-svg-icons": "^6.7.1",
    "@fortawesome/react-fontawesome": "^0.2.2",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "axios": "^1.7.8",
    "cors": "^2.8.5",
    "emailjs-com": "^3.2.0",
    "express": "^5.1.0",
    "jsonwebtoken": "^9.0.2",
    "jwt-decode": "^4.0.0",
    "lucide-react": "^0.474.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-icons": "^4.7.1",
    "react-router-dom": "^6.28.0",
    "react-scripts": "5.0.1",
    "react-toastify": "^11.0.5",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "test:coverage": "react-scripts test --coverage --watchAll=false",
    "test:ci": "react-scripts test --coverage --watchAll=false --ci",
    "test:watch": "react-scripts test --watch",
    "test:unit": "npm run test -- --testPathPattern=src/__tests__ --testPathIgnorePatterns=src/__tests__/integration",
    "test:integration": "npm run test -- --testPathPattern=src/__tests__/integration",
    "test:components": "npm run test -- --testPathPattern=src/__tests__/components",
    "test:context": "npm run test -- --testPathPattern=src/__tests__/context",
    "test:utils": "npm run test -- --testPathPattern=src/__tests__/utils",
    "test:pages": "npm run test -- --testPathPattern=src/__tests__/pages",
    "test:snapshot": "npm run test -- --testPathPattern=src/__tests__ --testNamePattern=snapshot",
    "test:accessibility": "npm run test -- --testPathPattern=src/__tests__ --testNamePattern=accessibility",
    "test:performance": "npm run test -- --testPathPattern=src/__tests__ --testNamePattern=performance",
    "test:regression": "npm run test -- --testPathPattern=src/__tests__ --testNamePattern=regression",
    "eject": "react-scripts eject",
    "build:css": "tailwind build src/index.css -o public/output.css",
    "lint": "eslint src --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint src --ext .js,.jsx,.ts,.tsx --fix",
    "format": "prettier --write src/**/*.{js,jsx,ts,tsx,json,css,md}",
    "type-check": "tsc --noEmit",
    "cypress:open": "cypress open",
    "cypress:run": "cypress run",
    "cypress:run:headless": "cypress run --headless",
    "cypress:run:chrome": "cypress run --browser chrome",
    "cypress:run:firefox": "cypress run --browser firefox",
    "cypress:run:edge": "cypress run --browser edge",
    "cypress:run:mobile": "cypress run --config viewportWidth=375,viewportHeight=667",
    "cypress:run:tablet": "cypress run --config viewportWidth=768,viewportHeight=1024",
    "cypress:run:desktop": "cypress run --config viewportWidth=1280,viewportHeight=720",
    "cypress:run:accessibility": "cypress run --spec 'cypress/e2e/accessibility.cy.js'",
    "cypress:run:performance": "cypress run --spec 'cypress/e2e/performance.cy.js'",
    "cypress:run:authentication": "cypress run --spec 'cypress/e2e/authentication.cy.js'",
    "cypress:run:user-flows": "cypress run --spec 'cypress/e2e/user-flows.cy.js'",
    "test:e2e": "npm run cypress:run:headless",
    "test:e2e:all": "npm run cypress:run:headless -- --spec 'cypress/e2e/**/*.cy.js'",
    "test:e2e:auth": "npm run cypress:run:headless -- --spec 'cypress/e2e/authentication.cy.js'",
    "test:e2e:flows": "npm run cypress:run:headless -- --spec 'cypress/e2e/user-flows.cy.js'",
    "test:e2e:responsive": "npm run cypress:run:mobile && npm run cypress:run:tablet && npm run cypress:run:desktop",
    "test:all": "npm run test:ci && npm run test:e2e:all",
    "test:quick": "npm run test:unit && npm run test:e2e:auth",
    "test:full": "npm run test:ci && npm run test:e2e:all && npm run lint && npm run format:check",
    "test:pre-commit": "npm run test:unit && npm run lint:fix && npm run format",
    "test:ci": "npm run test:ci && npm run test:e2e:all && npm run lint",
    "test:coverage:full": "npm run test:coverage && npm run test:e2e:all",
    "test:regression:full": "npm run test:regression && npm run test:e2e:all",
    "test:accessibility:full": "npm run test:accessibility && npm run cypress:run:accessibility",
    "test:performance:full": "npm run test:performance && npm run cypress:run:performance",
    "test:snapshot:update": "npm run test:snapshot -- --updateSnapshot",
    "test:snapshot:check": "npm run test:snapshot",
    "test:visual": "npm run test:snapshot && npm run cypress:run:headless -- --spec 'cypress/e2e/visual.cy.js'",
    "test:security": "npm run test -- --testPathPattern=src/__tests__ --testNamePattern=security",
    "test:integration:full": "npm run test:integration && npm run test:e2e:all",
    "test:unit:full": "npm run test:unit && npm run test:components && npm run test:context && npm run test:utils && npm run test:pages",
    "test:debug": "npm run test -- --verbose --no-coverage",
    "test:debug:e2e": "npm run cypress:open",
    "test:parallel": "npm run test:unit & npm run test:e2e:auth & wait",
    "test:sequential": "npm run test:unit && npm run test:e2e:auth",
    "test:watch:all": "npm run test:watch & npm run cypress:open",
    "test:watch:unit": "npm run test:watch",
    "test:watch:e2e": "npm run cypress:open",
    "test:report": "npm run test:coverage && npm run test:e2e:all && npm run generate:test:report",
    "generate:test:report": "node scripts/generate-test-report.js",
    "test:clean": "rm -rf coverage && rm -rf cypress/videos && rm -rf cypress/screenshots",
    "test:setup": "npm install && npm run test:clean",
    "test:validate": "npm run lint && npm run test:unit && npm run test:e2e:auth",
    "test:smoke": "npm run test:unit -- --testNamePattern='smoke' && npm run test:e2e:auth",
    "test:critical": "npm run test:unit -- --testNamePattern='critical' && npm run test:e2e:auth",
    "test:non-critical": "npm run test:unit -- --testNamePattern='non-critical' && npm run test:e2e:flows",
    "test:nightly": "npm run test:all && npm run test:performance:full && npm run test:accessibility:full",
    "test:weekly": "npm run test:all && npm run test:regression:full && npm run test:security",
    "test:monthly": "npm run test:all && npm run test:visual && npm run test:integration:full",
    "format:check": "prettier --check src/**/*.{js,jsx,ts,tsx,json,css,md}",
    "format:write": "prettier --write src/**/*.{js,jsx,ts,tsx,json,css,md}",
    "lint:check": "eslint src --ext .js,.jsx,.ts,.tsx --max-warnings 0",
    "lint:fix:all": "npm run lint:fix && npm run format:write",
    "pre-commit": "npm run lint:check && npm run test:unit && npm run format:check",
    "pre-push": "npm run test:ci && npm run test:e2e:auth",
    "ci:test": "npm run test:ci && npm run test:e2e:all && npm run lint:check",
    "ci:build": "npm run build && npm run test:ci",
    "ci:deploy": "npm run ci:build && npm run test:e2e:all",
    "dev:test": "npm run start & npm run cypress:open",
    "dev:test:headless": "npm run start & npm run cypress:run:headless",
    "dev:test:watch": "npm run start & npm run test:watch & npm run cypress:open",
    "dev:test:full": "npm run start & npm run test:watch & npm run cypress:open & npm run lint -- --watch",
    "dev:test:parallel": "concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\"",
    "dev:test:sequential": "npm run start && npm run test:watch && npm run cypress:open",
    "dev:test:debug": "npm run start & npm run test:debug & npm run cypress:open",
    "dev:test:coverage": "npm run start & npm run test:coverage & npm run cypress:run:headless",
    "dev:test:all": "npm run start & npm run test:all & npm run cypress:run:headless",
    "dev:test:quick": "npm run start & npm run test:quick & npm run cypress:run:headless",
    "dev:test:full:watch": "concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\" \"npm run lint -- --watch\"",
    "dev:test:full:headless": "concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:run:headless\"",
    "dev:test:full:coverage": "concurrently \"npm run start\" \"npm run test:coverage\" \"npm run cypress:run:headless\"",
    "dev:test:full:all": "concurrently \"npm run start\" \"npm run test:all\" \"npm run cypress:run:headless\"",
    "dev:test:full:quick": "concurrently \"npm run start\" \"npm run test:quick\" \"npm run cypress:run:headless\"",
    "dev:test:full:debug": "concurrently \"npm run start\" \"npm run test:debug\" \"npm run cypress:open\"",
    "dev:test:full:report": "concurrently \"npm run start\" \"npm run test:report\" \"npm run cypress:run:headless\"",
    "dev:test:full:clean": "npm run test:clean && concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\"",
    "dev:test:full:setup": "npm run test:setup && concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\"",
    "dev:test:full:validate": "npm run test:validate && concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\"",
    "dev:test:full:smoke": "npm run test:smoke && concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\"",
    "dev:test:full:critical": "npm run test:critical && concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\"",
    "dev:test:full:non-critical": "npm run test:non-critical && concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\"",
    "dev:test:full:nightly": "npm run test:nightly && concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\"",
    "dev:test:full:weekly": "npm run test:weekly && concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\"",
    "dev:test:full:monthly": "npm run test:monthly && concurrently \"npm run start\" \"npm run test:watch\" \"npm run cypress:open\""
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "cypress": "^13.6.0",
    "cypress-axe": "^1.5.0",
    "cypress-file-upload": "^5.0.8",
    "eslint-config-prettier": "^8.6.0",
    "prettier": "2.8.4",
    "tailwindcss": "^3.4.17",
    "concurrently": "^8.2.2"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}",
      "!src/**/*.d.ts",
      "!src/index.jsx",
      "!src/App.jsx",
      "!src/**/__tests__/**",
      "!src/**/*.test.{js,jsx,ts,tsx}",
      "!src/**/*.spec.{js,jsx,ts,tsx}"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "coverageReporters": [
      "text",
      "lcov",
      "html",
      "json"
    ],
    "moduleNameMapper": {
      "\\.(css|less|scss|sass)$": "identity-obj-proxy",
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/src/__tests__/__mocks__/fileMock.js"
    },
    "transformIgnorePatterns": [
      "node_modules/(?!(lucide-react|axios|@fortawesome)/)"
    ],
    "clearMocks": true,
    "restoreMocks": true
  },
  "cypress": {
    "baseUrl": "http://localhost:3000",
    "viewportWidth": 1280,
    "viewportHeight": 720,
    "video": false,
    "screenshotOnRunFailure": true,
    "defaultCommandTimeout": 10000,
    "requestTimeout": 10000,
    "responseTimeout": 10000,
    "retries": {
      "runMode": 2,
      "openMode": 0
    },
    "env": {
      "apiUrl": "http://localhost:8000/ijaa/api/v1/user"
    }
  }
}
